<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-dots-signal-filter-control-04"
     ipr="trust200902">
  <front>
    <title abbrev="DOTS Signal Filter Control">Controlling Filtering Rules
    Using Distributed Denial-of-Service Open Threat Signaling (DOTS) Signal
    Channel</title>

    <author fullname="Kaname Nishizuka" initials="K." surname="Nishizuka">
      <organization>NTT Communications</organization>

      <address>
        <postal>
          <street>GranPark 16F 3-4-1 Shibaura, Minato-ku</street>

          <city>Tokyo</city>

          <region></region>

          <code>108-8118</code>

          <country>Japan</country>
        </postal>

        <email>kaname@nttv6.jp</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <code>35000</code>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="McAfee">McAfee, Inc.</organization>

      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560071</code>

          <country>India</country>
        </postal>

        <email>kondtir@gmail.com</email>
      </address>
    </author>

    <author fullname="Takahiko Nagata" initials="T." surname="Nagata">
      <organization>Lepidum</organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country>Japan</country>
        </postal>

        <email>nagata@lepidum.co.jp</email>
      </address>
    </author>

    <date />

    <workgroup>DOTS</workgroup>

    <keyword>Mitigation</keyword>

    <keyword>Automation</keyword>

    <keyword>Filtering</keyword>

    <keyword>Protective Networking</keyword>

    <keyword>Protected Networks</keyword>

    <keyword>Security</keyword>

    <keyword>Anti-DDoS</keyword>

    <keyword>Reactive</keyword>

    <keyword>Collaborative Networking</keyword>

    <keyword>Collaborative Security</keyword>

    <abstract>
      <t>This document specifies an extension to the DOTS signal channel
      protocol so that DOTS clients can control their filtering rules when an
      attack mitigation is active.</t>

      <t>Particularly, this extension allows a DOTS client to activate or
      de-activate existing filtering rules during a DDoS attack. The
      characterization of these filtering rules is supposed to be conveyed by
      a DOTS client during an idle time by means of the DOTS data channel
      protocol.</t>
    </abstract>

    <note title="Editorial Note (To be removed by RFC Editor)">
      <t>Please update these statements within the document with the RFC
      number to be assigned to this document:<list style="symbols">
          <t>"This version of this YANG module is part of RFC XXXX;"</t>

          <t>"RFC XXXX: Controlling Filtering Rules Using Distributed
          Denial-of-Service Open Threat Signaling (DOTS) Signal Channel";</t>

          <t>reference: RFC XXXX</t>

          <t>[RFCXXXX]</t>
        </list>Please update the "revision" date of the YANG module.</t>
    </note>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction">
      <section anchor="problem" title="The Problem">
        <t>The DOTS data channel protocol <xref
        target="I-D.ietf-dots-data-channel"></xref> is used for bulk data
        exchange between DOTS agents to improve the coordination of parties
        involved in the response to a Distributed Denial-of-Service (DDoS)
        attack. Filter management is one of its tasks which enables a DOTS
        client to retrieve the filtering capabilities of a DOTS server and to
        manage filtering rules. Typically, these Filtering rules are used for
        dropping or rate-limiting unwanted traffic, and permitting
        accept-listed traffic.</t>

        <t>Unlike the DOTS signal channel protocol <xref
        target="I-D.ietf-dots-signal-channel"></xref>, the DOTS data channel
        protocol is not expected to deal with attack conditions. As such, an
        issue that might be encountered in some deployments is when filters
        installed by means of the DOTS data channel protocol may not function
        as expected during DDoS attacks or, worse, exacerbate an ongoing DDoS
        attack. The DOTS data channel protocol cannot be used then to change
        these filters, which may complicate DDoS mitigation operations <xref
        target="Interop"></xref>.</t>

        <t>A typical case is a DOTS client which configures during 'idle' time
        (i.e., no mitigation is active) some filtering rules using the DOTS
        data channel protocol to permit traffic from accept-listed sources,
        but during a volumetric DDoS attack the DDoS mitigator identifies the
        source addresses/prefixes in the accept-listed filtering rules are
        attacking the target. For example, an attacker can spoof the IP
        addresses of accept-listed sources to generate attack traffic or the
        attacker can compromise the accept-listed sources and program them to
        launch a DDoS attack.</t>

        <t><xref target="I-D.ietf-dots-signal-channel"></xref> is designed so
        that the DDoS server notifies the conflict to the DOTS client (that
        is, 'conflict-cause' parameter set to 2 (Conflicts with an existing
        accept list)), but the DOTS client may not be able to withdraw the
        accept-list rules during the attack period due to the high-volume
        attack traffic saturating the inbound link to the DOTS client domain.
        In other words, the DOTS client cannot use the DOTS data channel
        protocol to withdraw the accept-list filters when a DDoS attack is in
        progress.</t>
      </section>

      <section anchor="sol" title="The Solution">
        <t>This specification addresses the problems discussed in <xref
        target="problem"></xref> by adding a capability for managing filtering
        rules using the DOTS signal channel protocol, which enables a DOTS
        client to request the activation (or deactivation) of filtering rules
        during a DDoS attack.</t>

        <t>The DOTS signal channel protocol is designed to enable a DOTS
        client to contact a DOTS server for help even under severe network
        congestion conditions. Therefore, extending the DOTS signal channel
        protocol to manage the filtering rules during an attack will enhance
        the protection capability offered by DOTS protocols.</t>

        <t><list style="empty">
            <t>Note: The experiment at the IETF103 hackathon <xref
            target="Interop"></xref> showed that even when the inbound link is
            saturated by DDoS attack traffic, the DOTS client can signal
            mitigation requests using the DOTS signal channel over the
            saturated link.</t>
          </list></t>

        <t>Conflicts that are induced by filters installed by other DOTS
        clients of the same domain are not discussed in this
        specification.</t>

        <t>An augment to the DOTS signal channel YANG module is defined in
        <xref target="YANG"></xref>.</t>

        <t>Sample examples are provided in <xref target="sample"></xref>, in
        particular: <list style="symbols">
            <t><xref target="sample1"></xref> illustrates how the filter
            control extension is used when conflicts with Access Control Lists
            (ACLs) are detected and reported by a DOTS server.</t>

            <t><xref target="sample2"></xref> shows how a DOTS client can
            instruct a DOTS server to safely forward some specific traffic in
            'attack' time.</t>

            <t><xref target="sample3"></xref> shows how a DOTS client can
            react if the DDoS traffic is still being forwarded to the DOTS
            client domain even if mitigation requests were sent to a DOTS
            server.</t>
          </list></t>

        <t>The JavaScript Object Notation (JSON) encoding of YANG-modeled data
        <xref target="RFC7951"></xref> is used to illustrate the examples.</t>
      </section>
    </section>

    <section anchor="notation" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref> <xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>

      <t>The reader should be familiar with the terms defined in <xref
      target="RFC8612"></xref>.</t>

      <t>The terminology for describing YANG modules is defined in <xref
      target="RFC7950"></xref>. The meaning of the symbols in the tree diagram
      is defined in <xref target="RFC8340"></xref>.</t>
    </section>

    <section title="Controlling Filtering Rules of a DOTS Client">
      <section anchor="bind" title="Binding DOTS Data and Signal Channels">
        <t>The filtering rules eventually managed using the DOTS signal
        channel protocol are created a priori by the same DOTS client using
        the DOTS data channel protocol. Managing conflicts with filters
        installed by other DOTS clients of the same domain is out of
        scope.</t>

        <t>As discussed in Section 4.4.1 of <xref
        target="I-D.ietf-dots-signal-channel"></xref>, a DOTS client must use
        the same 'cuid' for both the DOTS signal and data channels. This
        requirement is meant to facilitate binding DOTS channels used by the
        same DOTS client.</t>

        <t>The DOTS signal and data channels from a DOTS client may or may not
        use the same DOTS server. Nevertheless, the scope of the mitigation
        request, alias, and filtering rules are not restricted to the DOTS
        server but to the DOTS server domain. To that aim, DOTS servers within
        a domain are assumed to have a mechanism to coordinate the mitigation
        requests, aliases, and filtering rules to coordinate their decisions
        for better mitigation operation efficiency. The exact details about
        such mechanism is out of the scope of this document.</t>

        <t>A filtering rule controlled by the DOTS signal channel is
        identified by its ACL name (Section 4.3 of <xref
        target="I-D.ietf-dots-data-channel"></xref>). Note that an ACL name
        unambiguously identifies an ACL bound to a DOTS client, but the same
        name may be used by distinct DOTS clients.</t>

        <t>The activation or deactivation of an ACL by the DOTS signal channel
        overrides the 'activation-type' (defined in Section 4.3 of <xref
        target="I-D.ietf-dots-data-channel"></xref>) a priori conveyed with
        the filtering rules using the DOTS data channel protocol.</t>

        <t>Once the attack is mitigated, the DOTS client may use the data
        channel to control the 'activation-type' (e.g., revert to a default
        value) of some of the filtering rules controlled by the DOTS signal
        channel or delete some of these filters. This behavior is deployment
        specific.</t>
      </section>

      <section title="DOTS Signal Channel Extension">
        <section anchor="filtering" title="Parameters and Behaviors">
          <t>This specification extends the mitigation request defined in
          Section 4.4.1 of <xref target="I-D.ietf-dots-signal-channel"></xref>
          to convey the intended control of configured filtering rules.
          Concretely, the DOTS client conveys 'acl-list' attribute with the
          following sub-attributes in the CBOR body of a mitigation request
          (see the YANG structure in <xref target="tree"></xref>):<list
              style="hanging">
              <t hangText="acl-name:">A name of an access list defined using
              the DOTS data channel (Section 4.3 of <xref
              target="I-D.ietf-dots-data-channel"></xref>) that is associated
              with the DOTS client.<vspace blankLines="1" />As a reminder, an
              ACL is an ordered list of Access Control Entries (ACE). Each
              Access Control Entry has a list of match criteria and a list of
              actions <xref target="I-D.ietf-dots-data-channel"></xref>. The
              list of configured ACLs can be retrieved using the DOTS data
              channel during 'idle' time.<vspace blankLines="1" />This is a
              mandatory attribute when 'acl-list' is included.</t>

              <t hangText="activation-type:">Indicates the activation type of
              an ACL overriding the existing 'activation-type' installed by
              the DOTS client using the DOTS data channel. <vspace
              blankLines="1" />As a reminder, this attribute can be set to
              'deactivate', 'immediate', or 'activate-when-mitigating' as
              defined in <xref target="I-D.ietf-dots-data-channel"></xref>.
              <vspace blankLines="1" />Note that both 'immediate' and
              'activate-when-mitigating' have an immediate effect when a
              mitigation request is being processed by the DOTS server.
              <vspace blankLines="1" />This is an optional attribute.</t>
            </list></t>

          <t>The JSON/YANG mappings for DOTS filter control attributes are
          shown in Table 1.</t>

          <t><figure>
              <artwork><![CDATA[+-------------------+------------+--------+---------------+--------+
| Parameter Name    | YANG       | CBOR   | CBOR Major    | JSON   |
|                   | Type       | Key    |    Type &     | Type   |
|                   |            |        | Information   |        |
+-------------------+------------+--------+---------------+--------+
|ietf-dots-signal-  |            |        |               |        |
|control:activation-|            |        |               |        |
|            type   | enumeration| TBA1   | 0 unsigned    | String |
|                   |            |        |               |        |
|ietf-dots-signal-  |            |        |               |        |
| control:acl-list  | list       | TBA2   | 4 array       | Array  |
|                   |            |        |               |        |
|ietf-dots-signal-  |            |        |               |        |
| control:acl-name  | leafref    | TBA3   | 3 text string | String |
+-------------------+------------+--------+---------------+--------+
 
  Table 1: JSON/YANG Mapping to CBOR for Filter Control Attributes]]></artwork>
            </figure></t>

          <t>By default, ACL-related operations are achieved using the DOTS
          data channel protocol when no attack is ongoing. DOTS clients MUST
          NOT use the filtering control over DOTS signal channel in 'idle'
          time; such requests MUST be discarded by DOTS servers with 4.00 (Bad
          Request).</t>

          <t>During an attack time, DOTS clients may include 'acl-list',
          'acl-name', and 'activation-type' attributes in a mitigation
          request. This request may be the initial mitigation request for a
          given mitigation scope or a new one overriding an existing request.
          In both cases, a new 'mid' MUST be used. Nevertheless, it is NOT
          RECOMMENDED to include ACL attributes in an initial mitigation
          request for a given mitigation scope or in a mitigation request
          adjusting the mitigation scope. This recommendation is meant to
          avoid delaying attack mitigations because of failures to process ACL
          attributes.</t>

          <t>As the attack evolves, DOTS clients can adjust the
          'activation-type' of an ACL conveyed in a mitigation request or
          control other filters as necessary. This can be achieved by sending
          a PUT request with a new 'mid' value.</t>

          <t>It is RECOMMENDED for a DOTS client to subscribe to asynchronous
          notifications of the attack mitigation, as detailed in Section
          4.4.2.1 of <xref target="I-D.ietf-dots-signal-channel"></xref>. If
          not, the polling mechanism in Section 4.4.2.2 of <xref
          target="I-D.ietf-dots-signal-channel"></xref> has to be followed by
          the DOTS client.</t>

          <t>A DOTS client relies on the information received from the DOTS
          server and/or local information to the DOTS client domain to trigger
          a filter control request. Only filters that are pertinent for an
          ongoing mitigation should be controlled by a DOTS client using the
          DOTS signal channel.</t>

          <t>'acl-list', 'acl-name', and 'activation-type' are defined as
          comprehension-required parameters (<xref target="map"></xref>).
          Following the rules in Section 6 of <xref
          target="I-D.ietf-dots-signal-channel"></xref>, if the DOTS server
          does not understand the 'acl-list' or 'acl-name' or
          'activation-type' attributes, it responds with a "4.00 (Bad
          Request)" error response code.</t>

          <t>If the DOTS server does not find the ACL name ('acl-name')
          conveyed in the mitigation request for this DOTS client, it MUST
          respond with 4.04 (Not Found) error response code.</t>

          <t>If the DOTS server finds the ACL name for this DOTS client, and
          assuming the request passed the validation checks in Section 4.4.1
          of <xref target="I-D.ietf-dots-signal-channel"></xref>, the DOTS
          server MUST proceed with the 'activation-type' update. The update is
          immediately enforced by the DOTS server and will be maintained as
          the new activation type for the ACL name even after the termination
          of the mitigation request. In addition, the DOTS server MUST update
          the lifetime of the corresponding ACL similar to the update when a
          refresh request is received using the DOTS data channel (Section 7.2
          of <xref target="I-D.ietf-dots-data-channel"></xref>). If, for some
          reason, the DOTS server fails to apply the filter update, it MUST
          respond with 5.03 (Service Unavailable) error response code and
          include the failed ACL update in the diagnostic payload of the
          response (an example is shown in <xref target="diag"></xref>). Else,
          the DOTS server replies with the appropriate response code defined
          in Section 4.4.1 of <xref
          target="I-D.ietf-dots-signal-channel"></xref>.</t>

          <t><figure align="center" anchor="diag"
              title="Example of a Diagnostic Payload Including Failed ACL Update">
              <artwork><![CDATA[{
  "ietf-dots-signal-channel:mitigation-scope": {
    "scope": [
      {
        "mid": 123,
        "ietf-dots-signal-control:acl-list": [
          {
            "ietf-dots-signal-control:acl-name": "an-accept-list", 
            "ietf-dots-signal-control:activation-type": "deactivate"
          }
        ]
      }
    ]
  }
}]]></artwork>
            </figure></t>

          <t>If the DOTS client receives a 5.03 (Service Unavailable) with a
          diagnostic payload indicating a failed ACL update as a response to
          an initial mitigation or a mitigation with adjusted scope, the DOTS
          client MUST immediately send a new request which repeats all the
          parameters as sent in the failed mitigation request but without
          including the ACL attributes. After the expiry of Max-Age returned
          in the 5.03 (Service Unavailable) response, the DOTS client retries
          with a new mitigation request (i.e., a new 'mid') that repeats all
          the parameters as sent in the failed mitigation request (i.e., the
          one including the ACL attributes).</t>

          <t>If, during an active mitigation, the 'activation-type' is changed
          at the DOTS server (e.g., as a result of an external action) for an
          ACL bound to a DOTS client, the DOTS server notifies that DOTS
          client with the change by including the corresponding ACL parameters
          in an asynchronous notification (the DOTS client is observing the
          active mitigation) or in a response to a polling request (Section
          4.4.2.2 of <xref target="I-D.ietf-dots-signal-channel"></xref>).</t>

          <t>If the DOTS signal and data channels of a DOTS client are not
          established with the same DOTS server of a DOTS server domain, the
          above request processing operations are undertaken using the
          coordination mechanism discussed in <xref target="bind"></xref>.</t>

          <t>This specification does not require any modification to the
          efficacy update and the withdrawal procedures defined in <xref
          target="I-D.ietf-dots-signal-channel"></xref>. In particular,
          ACL-related clauses are not included in a PUT request used to send
          an efficacy update and DELETE requests.</t>
        </section>

        <section anchor="YANG" title="DOTS Signal Filtering Control Module ">
          <section anchor="tree" title="Tree Structure">
            <t>This document augments the "ietf-dots-signal-channel" YANG
            module defined in <xref
            target="I-D.ietf-dots-signal-channel"></xref> for managing
            filtering rules.</t>

            <t>This document defines the YANG module
            "ietf-dots-signal-control", which has the following tree
            structure:<figure>
                <artwork><![CDATA[module: ietf-dots-signal-control
  augment /ietf-signal:dots-signal/ietf-signal:message-type
          /ietf-signal:mitigation-scope/ietf-signal:scope:
    +--rw acl-list* [acl-name] {control-filtering}?
       +--rw acl-name          
       |    -> /ietf-data:dots-data/dots-client/acls/acl/name
       +--rw activation-type?   ietf-data:activation-type

]]></artwork>
              </figure></t>
          </section>

          <section title="YANG Module">
            <t>This YANG module is not intended to be used via
            NETCONF/RESTCONF for DOTS server management purposes; such module
            is out of the scope of this document. It serves only to provide a
            data model and encoding, but not a management data model.</t>

            <t>This module uses types defined in <xref
            target="I-D.ietf-dots-data-channel"></xref>.</t>

            <t><figure>
                <artwork><![CDATA[<CODE BEGINS> file "ietf-dots-signal-control@2019-05-13.yang"

module ietf-dots-signal-control {
  yang-version 1.1;
  namespace 
     "urn:ietf:params:xml:ns:yang:ietf-dots-signal-control";
  prefix dots-control;

  import ietf-dots-signal-channel {
    prefix ietf-signal;
    reference
      "RFC 8782: Distributed Denial-of-Service Open Threat
                 Signaling (DOTS) Signal Channel Specification";
    }
  import ietf-dots-data-channel {
    prefix ietf-data;
    reference
      "RFC 8783: Distributed Denial-of-Service Open Threat
                 Signaling (DOTS) Data Channel Specification";
  }
    
  organization
    "IETF DDoS Open Threat Signaling (DOTS) Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/dots/>
     WG List:  <mailto:dots@ietf.org>

     Author:  Kaname Nishizuka
              <mailto:kaname@nttv6.jp>

     Author:  Mohamed Boucadair
              <mailto:mohamed.boucadair@orange.com>

     Author:  Konda, Tirumaleswar Reddy
              <mailto:TirumaleswarReddy_Konda@McAfee.com>

     Author:  Takahiko Nagata
                 <mailto:nagata@lepidum.co.jp>";

  description
    "This module contains YANG definition for the signaling
     messages exchanged between a DOTS client and a DOTS server
     to control, by means of the DOTS signal channel, filtering
     rules configured using the DOTS data channel.

     Copyright (c) 2020 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2019-05-13 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: Controlling Filtering Rules Using Distributed
                 Denial-of-Service Open Threat Signaling (DOTS)
                 Signal Channel";
  }

  feature control-filtering {
    description
      "This feature means that the DOTS signal channel is able 
       to manage the filtering rules created by the same DOTS 
       client using the DOTS data channel.";
  }
  
  augment "/ietf-signal:dots-signal/ietf-signal:message-type" 
        + "/ietf-signal:mitigation-scope/ietf-signal:scope" {
    if-feature control-filtering;

    description "ACL name and activation type.";

    list acl-list {
      key "acl-name";
      description
        "List of ACLs as defined using the DOTS data
         channel. ACLs bound to a DOTS client are uniquely
         identified by a name.";
      leaf acl-name {
        type leafref {
          path "/ietf-data:dots-data/ietf-data:dots-client" 
             + "/ietf-data:acls/ietf-data:acl/ietf-data:name";
      }
      description
        "Reference to the ACL name bound to a DOTS client.";
    }
    leaf activation-type {
      type ietf-data:activation-type;
      default "activate-when-mitigating";
      description
        "Sets the activation type of an ACL.";
      }
    }   
  }
}
<CODE ENDS>
]]></artwork>
              </figure></t>
          </section>
        </section>
      </section>
    </section>

    <section anchor="sample" title="Sample Examples">
      <t>This section provides sample examples to illustrate the behavior
      specified in <xref target="filtering"></xref>. These examples are
      provided for illustration purposes; they should not be considered as
      deployment recommendations.</t>

      <section anchor="sample1" title="Conflict Handling">
        <t>Let's consider a DOTS client which contacts its DOTS server during
        'idle' time to install an accept-list allowing for UDP traffic issued
        from 2001:db8:1234::/48 with a destination port number 443 to be
        forwarded to 2001:db8:6401::2/127. It does so by sending, for example,
        a PUT request shown in <xref target="PUT"></xref>.</t>

        <t><figure anchor="PUT"
            title="DOTS Data Channel Request to Create a Filter">
            <artwork align="left"><![CDATA[PUT /restconf/data/ietf-dots-data-channel:dots-data\
    /dots-client=paL8p4Zqo4SLv64TLPXrxA/acls\
    /acl=an-accept-list HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-dots-data-channel:acls": {
    "acl": [
      {
        "name": "an-accept-list",
        "type": "ipv6-acl-type",
        "activation-type": "activate-when-mitigating",
        "aces": {
          "ace": [
            {
              "name": "test-ace-ipv6-udp",
              "matches": {
                "ipv6": {
                  "destination-ipv6-network": "2001:db8:6401::2/127",
                  "source-ipv6-network": "2001:db8:1234::/48"
                },
                "udp": {
                  "destination-port-range-or-operator": {
                    "operator": "eq",
                    "port": 443
                  }
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            }
          ]
        }
      }
    ]
  }
}]]></artwork>
          </figure></t>

        <t>Some time later, consider that a DDoS attack is detected by the
        DOTS client on 2001:db8:6401::2/127. Consequently, the DOTS client
        sends a mitigation request to its DOTS server as shown in <xref
        target="mitigate"></xref>.</t>

        <t><figure anchor="mitigate"
            title="DOTS Signal Channel Mitigation Request">
            <artwork align="left"><![CDATA[  Header: PUT (Code=0.03)
  Uri-Path: ".well-known"
  Uri-Path: "dots"
  Uri-Path: "mitigate"
  Uri-Path: "cuid=paL8p4Zqo4SLv64TLPXrxA"
  Uri-Path: "mid=123"
  Content-Format: "application/dots+cbor"

  {
    "ietf-dots-signal-channel:mitigation-scope": {
      "scope": [
        {
          "target-prefix": [
             "2001:db8:6401::2/127"
           ],   
           "target-protocol": [
             17
           ],
          "lifetime": 3600
        }
      ]
    }
  }
]]></artwork>
          </figure></t>

        <t>The DOTS server accepts immediately the request by replying with
        2.01 (Created) (<xref target="response"></xref> depicts the message
        body of the response).</t>

        <t><figure anchor="response" title="Status Response (Message Body)">
            <artwork align="left"><![CDATA[{
  "ietf-dots-signal-channel:mitigation-scope": {
     "scope": [
        {
          "mid": 123,
          "lifetime": 3600
      }
    ]
  }
}
]]></artwork>
          </figure></t>

        <t>Assuming the DOTS client subscribed to asynchronous notifications,
        when the DOTS server concludes that some of the attack sources belong
        to 2001:db8:1234::/48, it sends a notification message with 'status'
        code set to '1 (Attack mitigation is in progress)' and
        'conflict-cause' set to '2' (conflict-with-acceptlist) to the DOTS
        client to indicate that this mitigation request is in progress, but a
        conflict is detected.</t>

        <t>Upon receipt of the notification message from the DOTS server, the
        DOTS client sends a PUT request to deactivate the "an-accept-list" ACL
        as shown in <xref target="control"></xref>.</t>

        <t>The DOTS client can also decide to send a PUT request to deactivate
        the "an-accept-list" ACL, if suspect traffic is received from an
        accept-listed source (2001:db8:1234::/48). The structure of that PUT
        is the same as the one shown in <xref target="control"></xref>.</t>

        <t><figure anchor="control"
            title="PUT for Deactivating a Conflicting Filter">
            <artwork align="left"><![CDATA[  Header: PUT (Code=0.03)
  Uri-Path: ".well-known"
  Uri-Path: "dots"
  Uri-Path: "mitigate"
  Uri-Path: "cuid=paL8p4Zqo4SLv64TLPXrxA"
  Uri-Path: "mid=124"
  Content-Format: "application/dots+cbor"

  {
    "ietf-dots-signal-channel:mitigation-scope": {
      "scope": [
        {
          "target-prefix": [
             "2001:db8:6401::2/127"
           ],   
           "target-protocol": [
             17
           ],
           "ietf-dots-signal-control:acl-list": [
             {
               "ietf-dots-signal-control:acl-name": "an-accept-list", 
               "ietf-dots-signal-control:activation-type": "deactivate"
             }
           ],
          "lifetime": 3600
        }
      ]
    }
  }
]]></artwork>
          </figure></t>

        <t>Then, the DOTS server deactivates "an-accept-list" ACL and replies
        with 2.04 (Changed) response to the DOTS client to confirm the
        successful operation. The message body is similar to the one depicted
        in <xref target="response"></xref>.</t>

        <t>Once the attack is mitigated, the DOTS client may use the data
        channel to retrieve its ACLs maintained by the DOTS server. As shown
        in <xref target="GET-2"></xref>, the activation type is set to
        'deactivate' as set by the DOTS signal channel (<xref
        target="control"></xref>) instead of the type initially set using the
        DOTS data channel (<xref target="PUT"></xref>).</t>

        <t><figure anchor="GET-2"
            title="DOTS Data Channel GET Response after Mitigation (Message Body)">
            <artwork align="left"><![CDATA[{
  "ietf-dots-data-channel:acls": {
    "acl": [
      {
        "name": "an-accept-list",
        "type": "ipv6-acl-type",
        "activation-type": "deactivate",
        "pending-lifetime": 10021,
        "aces": {
          "ace": [
            {
              "name": "test-ace-ipv6-udp",
              "matches": {
                "ipv6": {
                  "destination-ipv6-network": "2001:db8:6401::2/127",
                  "source-ipv6-network": "2001:db8:1234::/48"
                },
                "udp": {
                  "destination-port-range-or-operator": {
                    "operator": "eq",
                    "port": 443
                  }
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            }
          ]
        }
      }
    ]
  }
}]]></artwork>
          </figure></t>
      </section>

      <section anchor="sample2"
               title="On-Demand Activation of an Accept-List Filter">
        <t>Let's consider a DOTS client which contacts its DOTS server during
        'idle' time to install an accept-list allowing for UDP traffic issued
        from 2001:db8:1234::/48 to be forwarded to 2001:db8:6401::2/127. It
        does so by sending, for example, a PUT request shown in <xref
        target="PUT1"></xref>. The DOTS server installs this filter with a
        "deactivated" state.</t>

        <t><figure anchor="PUT1"
            title="DOTS Data Channel Request to Create an Accept-List Filter">
            <artwork align="left"><![CDATA[PUT /restconf/data/ietf-dots-data-channel:dots-data\
    /dots-client=ioiuLoZqo4SLv64TLPXrxA/acls\
    /acl=my-accept-list HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-dots-data-channel:acls": {
    "acl": [
      {
        "name": "my-accept-list",
        "type": "ipv6-acl-type",
        "activation-type": "deactivate",
        "aces": {
          "ace": [
            {
              "name": "an-ace",
              "matches": {
                "ipv6": {
                  "destination-ipv6-network": "2001:db8:6401::2/127",
                  "source-ipv6-network": "2001:db8:1234::/48",
                  "protocol": 17
                }
              },
              "actions": {
                "forwarding": "accept"
              }
            }
          ]
        }
      }
    ]
  }
}]]></artwork>
          </figure></t>

        <t>Sometime later, consider that a UDP DDoS attack is detected by the
        DOTS client on 2001:db8:6401::2/127 but the DOTS client wants to let
        the traffic from 2001:db8:1234::/48 to be accept-listed to the DOTS
        client domain. Consequently, the DOTS client sends a mitigation
        request to its DOTS server as shown in <xref
        target="mitigate1"></xref>.</t>

        <t><figure anchor="mitigate1"
            title="DOTS Signal Channel Mitigation Request with a Filter Control">
            <artwork align="left"><![CDATA[  Header: PUT (Code=0.03)
  Uri-Path: ".well-known"
  Uri-Path: "dots"
  Uri-Path: "mitigate"
  Uri-Path: "cuid=ioiuLoZqo4SLv64TLPXrxA"
  Uri-Path: "mid=4879"
  Content-Format: "application/dots+cbor"

  {
    "ietf-dots-signal-channel:mitigation-scope": {
      "scope": [
        {
          "target-prefix": [
             "2001:db8:6401::2/127"
           ],   
           "target-protocol": [
             17
           ],
           "ietf-dots-signal-control:acl-list": [
             {
               "ietf-dots-signal-control:acl-name": "my-accept-list", 
               "ietf-dots-signal-control:activation-type": "immediate"
             }
          ],
          "lifetime": 3600
        }
      ]
    }
  }
]]></artwork>
          </figure></t>

        <t>The DOTS server activates "my-accept-list" ACL and replies with
        2.01 (Created) response to the DOTS client to confirm the successful
        operation.</t>
      </section>

      <section anchor="sample3"
               title="DOTS Servers/Mitigators Lacking Capacity">
        <t>This section describes a scenario in which a DOTS client activates
        a drop-list or a rate-limit filter during an attack.</t>

        <t>Consider a DOTS client that contacts its DOTS server during 'idle'
        time to install an accept-list that rate-limits all (or a part
        thereof) traffic to be forwarded to 2001:db8:123::/48 as a last resort
        countermeasure whenever required. Installing the accpe-list can be
        done by sending, for example, the PUT request shown in <xref
        target="rate"></xref>. The DOTS server installs this filter with a
        "deactivated" state.</t>

        <t><figure anchor="rate"
            title="DOTS Data Channel Request to Create a Rate-Limit Filter">
            <artwork><![CDATA[PUT /restconf/data/ietf-dots-data-channel:dots-data\
    /dots-client=OopPisZqo4SLv64TLPXrxA/acls\
    /acl=my-ratelimit-list HTTP/1.1
Host: example.com
Content-Type: application/yang-data+json

{
  "ietf-dots-data-channel:acls": {
    "acl": [
      {
        "name": "my-ratelimit-list",
        "type": "ipv6-acl-type",
        "activation-type": "deactivate",
        "aces": {
          "ace": [
            {
              "name": "my-ace",
              "matches": {
                "ipv6": {
                  "destination-ipv6-network": "2001:db8:123::/48"
                }
              },
              "actions": {
                "forwarding": "accept",
                "rate-limit": "20000.00"
              }
            }
          ]
        }
      }
    ]
  }
}
]]></artwork>
          </figure></t>

        <t>Consider now that a DDoS attack is detected by the DOTS client on
        2001:db8:123::/48. Consequently, the DOTS client sends a mitigation
        request to its DOTS server (<xref target="ratel"></xref>).</t>

        <t><figure anchor="ratel"
            title="DOTS Signal Channel Mitigation Request">
            <artwork><![CDATA[  Header: PUT (Code=0.03)
  Uri-Path: ".well-known"
  Uri-Path: "dots"
  Uri-Path: "mitigate"
  Uri-Path: "cuid=OopPisZqo4SLv64TLPXrxA"
  Uri-Path: "mid=85"
  Content-Format: "application/dots+cbor"

  {
    "ietf-dots-signal-channel:mitigation-scope": {
      "scope": [
        {
          "target-prefix": [
             "2001:db8:123::/48"
           ],   
          "lifetime": 3600
        }
      ]
    }
  }
]]></artwork>
          </figure></t>

        <t>For some reason (e.g., the DOTS server, or the mitigator, is
        lacking a capability or capacity), the DOTS client is still receiving
        attack traffic which saturates available links. To soften the problem,
        the DOTS client decides to activate the filter that rate-limits the
        traffic destined to the DOTS client domain. To that aim, the DOTS
        client sends the mitigation request to its DOTS server shown in <xref
        target="rateres"></xref>.</t>

        <t><figure anchor="rateres"
            title="DOTS Signal Channel Mitigation Request to Activate a Rate-Limit Filter">
            <artwork><![CDATA[  Header: PUT (Code=0.03)
  Uri-Path: ".well-known"
  Uri-Path: "dots"
  Uri-Path: "mitigate"
  Uri-Path: "cuid=OopPisZqo4SLv64TLPXrxA"
  Uri-Path: "mid=86"
  Content-Format: "application/dots+cbor"

  {
    "ietf-dots-signal-channel:mitigation-scope": {
      "scope": [
        {
          "target-prefix": [
             "2001:db8:123::/48"
           ],   
           "ietf-dots-signal-control:acl-list": [
             {
               "ietf-dots-signal-control:acl-name": "my-ratelimit-list", 
               "ietf-dots-signal-control:activation-type": "immediate"
             }
           ],
          "lifetime": 3600
        }
      ]
    }
  }
]]></artwork>
          </figure></t>

        <t>Then, the DOTS server activates "my-ratelimit-list" ACL and replies
        with 2.04 (Changed) response to the DOTS client to confirm the
        successful operation.</t>

        <t>As the attack mitigation evolves, the DOTS client may decide to
        deactivate the rate-limit policy (e.g., upon receipt of notification
        status change from 'attack-exceeded-capability' to
        'attack-mitigation-in-progress'). Based on the mitigation status
        conveyed by the DOTS server, the DOTS client can de-activate the
        rate-limit action. It does so by sending the request shown in <xref
        target="rateres2"></xref>.</t>

        <t><figure anchor="rateres2"
            title="DOTS Signal Channel Mitigation Request to Deactivate a Rate-Limit Filter">
            <artwork><![CDATA[  Header: PUT (Code=0.03)
  Uri-Path: ".well-known"
  Uri-Path: "dots"
  Uri-Path: "mitigate"
  Uri-Path: "cuid=OopPisZqo4SLv64TLPXrxA"
  Uri-Path: "mid=87"
  Content-Format: "application/dots+cbor"

  {
    "ietf-dots-signal-channel:mitigation-scope": {
      "scope": [
        {
          "target-prefix": [
             "2001:db8:123::/48"
           ],   
           "ietf-dots-signal-control:acl-list": [
             {
               "ietf-dots-signal-control:acl-name": "my-ratelimit-list", 
               "ietf-dots-signal-control:activation-type": "deactivate"
             }
           ],
          "lifetime": 3600
        }
      ]
    }
  }
]]></artwork>
          </figure></t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <section anchor="map" title="DOTS Signal Channel CBOR Mappings Registry">
        <t>This specification registers the following parameters in the IANA
        "DOTS Signal Channel CBOR Key Values" registry established by <xref
        target="I-D.ietf-dots-signal-channel"></xref>
        (https://www.iana.org/assignments/dots/dots.xhtml#dots-signal-channel-cbor-key-values).</t>

        <t><list style="symbols">
            <t>Note to the RFC Editor: Please delete (TBA1-TBA2-TBA3) once the
            CBOR keys are assigned from the 1-16383 range. Please update Table
            1 accordingly.</t>
          </list></t>

        <t><figure align="center">
            <artwork><![CDATA[   +--------------------+--------+-------+------------+---------------+
   | Parameter Name     | CBOR   | CBOR  | Change     | Specification |
   |                    | Key    | Major | Controller | Document(s)   |
   |                    | Value  | Type  |            |               |
   +--------------------+--------+-------+------------+---------------+
   |ietf-dots-signal-   |        |       |            |               |
   |control:activation- |   52   |       |            |               |
   |             type   | (TBA1) |   0   |    IESG    |   [RFCXXXX]   |
   |ietf-dots-signal-   |   53   |       |            |               |
   | control:acl-list   | (TBA2) |   4   |    IESG    |   [RFCXXXX]   |
   |ietf-dots-signal-   |   54   |       |            |               |
   | control:acl-name   | (TBA3) |   3   |    IESG    |   [RFCXXXX]   |
   +--------------------+--------+-------+------------+---------------+
]]></artwork>
          </figure></t>
      </section>

      <section anchor="yang-iana"
               title="DOTS Signal Filtering Control YANG Module">
        <t>This document requests IANA to register the following URI in the
        "ns" subregistry within the "IETF XML Registry" <xref
        target="RFC3688"></xref>:</t>

        <t><figure>
            <artwork><![CDATA[  URI: urn:ietf:params:xml:ns:yang:ietf-dots-signal-control
  Registrant Contact: The IESG.
  XML: N/A; the requested URI is an XML namespace.

]]></artwork>
          </figure></t>

        <t>This document requests IANA to register the following YANG module
        in the "YANG Module Names" subregistry <xref target="RFC7950"></xref>
        within the "YANG Parameters" registry.</t>

        <t><figure>
            <artwork><![CDATA[  Name: ietf-dots-signal-control
  Namespace: urn:ietf:params:xml:ns:yang:ietf-dots-signal-control
  Maintained by IANA: N
  Prefix: dots-control
  Reference: RFC XXXX

]]></artwork>
          </figure></t>
      </section>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>The security considerations discussed in <xref
      target="I-D.ietf-dots-signal-channel"></xref> and <xref
      target="I-D.ietf-dots-data-channel"></xref> need to be taken into
      account.</t>

      <t>This specification does not allow to create new filtering rules,
      which is the responsibility of the DOTS data channel. DOTS client
      domains should be adequately prepared prior to an attack, e.g., by
      creating filters that will be activated on demand when an attack is
      detected.</t>

      <t>A DOTS client is entitled to access only to resources it creates. In
      particular, a DOTS client can not tweak filtering rules created by other
      DOTS clients of the same DOTS client domain. As a reminder, DOTS servers
      must associate filtering rules with the DOTS client that created these
      resources. Failure to ensure such association by a DOTS server will have
      severe impact on DOTS client domains.</t>

      <t>A compromised DOTS client can use the filtering control capability to
      exacerbate an ongoing attack. Likewise, such a compromised DOTS client
      may abstain from reacting to an ACL conflict notification received from
      the DOTS server during attacks. These are not new attack vectors, but
      variations of threats discussed in <xref
      target="I-D.ietf-dots-signal-channel"></xref> and <xref
      target="I-D.ietf-dots-data-channel"></xref>. DOTS operators should
      carefully monitor and audit DOTS agents to detect misbehaviors and to
      deter misuses.</t>
    </section>

    <section anchor="ack" title="Acknowledgements">
      <t>Many thanks to Wei Pan, Xia Liang, Jon Shallow, and Dan Wing for the
      comments.</t>

      <t>Thanks to Benjamin Kaduk for the AD review.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.7950"?>

      <?rfc include="reference.RFC.3688"?>

      <?rfc include='reference.RFC.8174'?>

      <?rfc include="reference.I-D.ietf-dots-signal-channel"?>

      <?rfc include="reference.I-D.ietf-dots-data-channel" ?>

      <?rfc ?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.8612"?>

      <?rfc include='reference.RFC.7951'?>

      <?rfc include='reference.RFC.8340'?>

      <reference anchor="Interop"
                 target="https://datatracker.ietf.org/meeting/103/materials/slides-103-dots-interop-report-from-ietf-103-hackathon-00">
        <front>
          <title>DOTS Interop test report, IETF 103 Hackathon</title>

          <author fullname="Kaname Nishizuka" initials="K."
                  surname="Nishizuka">
            <organization>NTT Communications</organization>

            <address>
              <postal>
                <street>GranPark 16F 3-4-1 Shibaura, Minato-ku</street>

                <city>Tokyo</city>

                <region></region>

                <code>108-8118</code>

                <country>Japan</country>
              </postal>

              <email>kaname@nttv6.jp</email>
            </address>
          </author>

          <author fullname="Jon Shallow" initials="J." surname=" Shallow">
            <organization>J.NCC Group</organization>

            <address>
              <postal>
                <street></street>

                <city></city>

                <region></region>

                <code></code>

                <country></country>
              </postal>

              <phone></phone>

              <facsimile></facsimile>

              <email></email>

              <uri></uri>
            </address>
          </author>

          <author fullname="Liang Xia" initials="L." surname="Xia ">
            <organization>Huawei</organization>

            <address>
              <postal>
                <street></street>

                <city></city>

                <region></region>

                <code></code>

                <country></country>
              </postal>

              <phone></phone>

              <facsimile></facsimile>

              <email></email>

              <uri></uri>
            </address>
          </author>

          <date month="November" year="2018" />
        </front>
      </reference>
    </references>
  </back>
</rfc>
